name: deploy service to dev k8s

on:
  push:
    branches:
      - develop
      - "ci/improve-helm-charts"

    tags:
      - v*

  pull_request:

env:
  GITHUB_REGISTRY: ghcr.io

jobs:
  deploy-to-dev-k8s:
    name: Deploy service to k8s for development environment
    if: github.event_name == 'push'
    runs-on: ubuntu-22.04

    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: Build and push image
        run: |
          docker login ${{ env.GITHUB_REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GH_REGISTRY_TOKEN }}
          docker build -t $GITHUB_REGISTRY/tourmalinecore/inner-circle/dev-salary-service-api:latest -t $GITHUB_REGISTRY/tourmalinecore/inner-circle/dev-salary-service-api:${{ github.sha }} -f SalaryService.Api/Dockerfile .
          docker push $GITHUB_REGISTRY/tourmalinecore/inner-circle/dev-salary-service-api:latest
          docker push $GITHUB_REGISTRY/tourmalinecore/inner-circle/dev-salary-service-api:${{ github.sha }}
      # - name: Deploy
      #   uses: WyriHaximus/github-action-helm3@v2
      #   with:
      #     exec:
      #       helm upgrade --namespace dev-inner-circle --create-namespace --install dev-salary-service-api
      #       --set "aspnetcoreEnvironment=Development"
      #       --set "ingress.host"=${{ secrets.DEV_HOST }}
      #       --set "deployment.appsettings.ConnectionStrings.DefaultConnection=${{ secrets.DEV_POSTGRESQL_CONNECTION_STRING }}"
      #       --set "deployment.appsettings.AuthenticationOptions.PublicSigningKey=${{ secrets.DEV_PUBLIC_SIGNING_KEY }}"
      #       --set "deployment.appsettings.AuthenticationOptions.PrivateSigningKey=${{ secrets.DEV_PRIVATE_SIGNING_KEY }}"
      #       --set "resources.limits.cpu=${{ secrets.DEV_APP_CPU_LIMIT }}"
      #       --set "resources.limits.memory=${{ secrets.DEV_APP_MEMORY_LIMIT }}"
      #       --set "resources.requests.cpu=${{ secrets.DEV_APP_CPU_REQUESTS }}"
      #       --set "resources.requests.memory=${{ secrets.DEV_APP_MEMORY_REQUESTS }}"
      #       --set "imageCredentials.username=${{ github.actor }}"
      #       --set "imageCredentials.password=${{ secrets.GH_REGISTRY_TOKEN }}"
      #       --set "image.tag=${{ github.sha }}"
      #       --set "image.pullPolicy=Always"
      #       ./SalaryService.Api/ci/chart
      #     kubeconfig: "${{ secrets.DEV_KUBECONFIG }}"
